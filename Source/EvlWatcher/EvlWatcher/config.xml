<?xml version="1.0" encoding="utf-8"?>
<Config>
	<Global>

		<!-- Levels are: Off, Critical, Warning, Error, Info, Verbose, Debug. Loglevel means written to EventLog, ConsoleLevel means viewable in Console-->
		<LogLevel>Info</LogLevel>

		<!-- how many lines of console output will be stored to provide to the wcf console (max). This is used by the EvlConsole to query the latest output-->
		<ConsoleBacklog>3000</ConsoleBacklog>
		<!-- this is the interval the log files are checked, in seconds-->
		<CheckInterval>30</CheckInterval>

		<!-- this is the whitelist. ips matching this pattern will never get banned, not temporarily and not permanently-->
		<WhiteList>192.168.*;10.0.0.*;127.0.0.1;</WhiteList>
		<!-- this is the list of permanently banned ips. (blacklist) - those bans will never get lifted automatically-->
		<Banlist></Banlist>
	</Global>

	<!-- OK, so here are all rules i know, some work on specific servers, some don't. All rules add up and should keep common windows systems safe from RDP-Bruters.
  If you want to contribute, this here is the most important section. Also, a correlation method between different event log entries is planned in future versions.-->
	<Tasks>
		<!-- SMB Server -->
		<Task Name="BlockSMBBruters" Active="true">
			<!-- the description -->
			<Description>
				This rule checks for failed SMB logins.
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating
		      - If you dont know what this does, leave it set to false
			  
			  - If you set this to true, it means that the task will only receive events it has not already received
			  
			  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
			     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>
			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Microsoft-Windows-SMBServer/Security
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>SMB Session Authentication Failure</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				(\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b)
			</Regex>
		</Task>
		<Task Name="BlockRDPBrutersBySecurity4625" Active="true">

			<!-- the description ..-->
			<Description>
				This rule checks the security Log for failed attempts
			</Description>

			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>

			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>

			<!-- this is the amount of times an entry must occur within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>

			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>

			<!-- This is the place where the rule looks for entries, separated by comma-->
			<EventPath>
				Security
			</EventPath>

			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>4625</Booster>
				<Booster>IpAddress</Booster>
			</RegexBoosters>

			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words, for testing use regex101.com-->
			<Regex>
				&lt;Data Name=.IpAddress.&gt;(\d*.\d*.\d*.\d*)
			</Regex>

		</Task>
		<Task Name="BlockRDPBrutersByRdpCore140" Active="true">

			<!-- the description ..-->
			<Description>
				This rule checks the RdpCoreTS/Operational Log for failed login attempts
				This only tackles login attempts where the user does not exist (existing users do not trigger 140.. why? no one knows)
			</Description>

			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>

			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>

			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>

			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>

			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Microsoft-Windows-RemoteDesktopServices-RdpCoreTS/Operational
			</EventPath>

			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>140</Booster>
				<Booster>IPString</Booster>
			</RegexBoosters>

			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				.*.*EventID.140.*&lt;Data Name=.IPString.&gt;(\d*.\d*.\d*.\d*).*&lt;\/Data&gt;
			</Regex>
		</Task>
		<Task Name="BlockRDPBrutersByRdpCore131" Active="true">

			<!-- the description ..-->
			<Description>
				This rule checks the RdpCoreTS/Operational Log for any opening connections. It is not perfect, as it will count failed AND successful connections, but this works ok in normal day life
				This is necessary because login attempts with an existing user are NOT logged in the 140 event by Microsoft for some reasons.
			</Description>

			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>

			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>

			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>

			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>

			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Microsoft-Windows-RemoteDesktopServices-RdpCoreTS/Operational
			</EventPath>

			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>131</Booster>
				<Booster>ClientIP</Booster>
			</RegexBoosters>

			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				.*.*EventID.131.*&lt;Data Name=.ClientIP.&gt;(\d*.\d*.\d*.\d*).*&lt;\/Data&gt;
			</Regex>

		</Task>
		<Task Name="BlockRDPBrutersByRdpCore131_IPV6" Active="true">
			<!-- the description ..-->
			<Description>
				This rule checks the RdpCoreTS/Operational Log for any opening connections. It is not perfect, as it will count failed AND successful connections, but this works ok in normal day life
				This is necessary because login attempts with an existing user are NOT logged in the 140 event by Microsoft for some reasons.
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>

			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Microsoft-Windows-RemoteDesktopServices-RdpCoreTS/Operational
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>131</Booster>
				<Booster>ClientIP</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				([a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7}|::|:(?::[a-f0-9]{1,4}){1,6}|[a-f0-9]{1,4}:(?::[a-f0-9]{1,4}){1,5}|(?:[a-f0-9]{1,4}:){2}(?::[a-f0-9]{1,4}){1,4}|(?:[a-f0-9]{1,4}:){3}(?::[a-f0-9]{1,4}){1,3}|(?:[[a-f0-9]{1,4}:){4}(?::[a-f0-9]{1,4}){1,2}|(?:[a-f0-9]{1,4}:){5}:[a-f0-9]{1,4}|(?:[a-f0-9]{1,4}:){1,6}:)
			</Regex>
		</Task>

		<Task Name="MariaDB" Active="true">
			<!-- the description ..-->
			<Description>
				This rule checks for failed MariaDb root logins.
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>
			<!-- this is used for rules that only need new events for evaluating.
 		      - If you dont know what this does, leave it set to false
 			  
 			  - If you set this to true, it means that the task will only receive events it has not already received
 			  
 			  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
 			     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>
			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Application
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>100</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				&lt;Data&gt;Access denied for user 'root'@'(\d*.\d*.\d*.\d*)
			</Regex>
		</Task>
		<Task Name="BlockSSHBrutersByOpenSsh" Active="true">
			<!-- the description ..-->
			<Description>
				This rule checks for failed SSH logins.
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>
			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				OpenSSH/Operational
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>Failed password</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				(\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b)
			</Regex>
		</Task>
		<Task Name="BlockSMTPAuthExchangeFrontend" Active="true">

			<!-- the description ..-->
			<Description>
				This rule checks the Application Log for Provider MSExchangeFrontEndTransport and LogonDenied
			</Description>

			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
		      - If you dont know what this does, leave it set to false
			  
			  - If you set this to true, it means that the task will only receive events it has not already received
			  
			  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
			     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>

			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>

			<!-- this is the amount of times an entry must occur within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>

			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>

			<!-- This is the place where the rule looks for entries, separated by comma-->
			<EventPath>
				Application
			</EventPath>

			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>1035</Booster>
				<Booster>MSExchangeFrontEndTransport</Booster>
				<Booster>LogonDenied</Booster>
			</RegexBoosters>

			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words, for testing use regex101.com-->
			<Regex>
				&lt;Data&gt;(\d*.\d*.\d*.\d*)&lt;/Data&gt;
			</Regex>

		</Task>
		<Task Name="BlockMSSQLBruteforce" Active="true">
			<!-- the description ..-->
			<Description>
				This rule checks for failed SQL Server logins.
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>

			<!-- this is used for rules that only need new events for evaluating.
		  - If you dont know what this does, leave it set to false
		  
		  - If you set this to true, it means that the task will only receive events it has not already received
		  
		  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
			 (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>
			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occure within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries-->
			<EventPath>
				Application
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>Password did not match that for the login provided</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words for more infos see regex101.com-->
			<Regex>
				(\b(?:[0-9]{1,3}\.){3}[0-9]{1,3}\b)
			</Regex>
		</Task>
		<Task Name="BlockVPNBrutersBySecurity6273" Active="true">
			<!-- the description ..-->
			<Description>
				This rule checks the security Log for failed VPN attempts
			</Description>
			<!-- this is the time a temporary ban is issued for, in seconds-->
			<LockTime>
				3600
			</LockTime>
			<!-- this is used for rules that only need new events for evaluating.
			      - If you dont know what this does, leave it set to false
				  
				  - If you set this to true, it means that the task will only receive events it has not already received
				  
				  - If you set this to false, it means that the task will receive all events of its timeframe, everytime it is polled 
				     (e.g. task gets events provided until they fall out of the timeframe)-->
			<OnlyNew>
				False
			</OnlyNew>
			<!-- this is the timeframe (in seconds) to be inspected-->
			<EventAge>
				120
			</EventAge>
			<!-- this is the amount of times an entry must occur within the time frame to be considered a brute force attempt-->
			<TriggerCount>
				5
			</TriggerCount>
			<!-- after this amount of times temporarily banned, the ban will become permanent (enter a negative number to disable permanent bans) -->
			<PermaBanCount>
				3
			</PermaBanCount>
			<!-- This is the place where the rule looks for entries, separated by comma-->
			<EventPath>
				Security
			</EventPath>
			<!-- This was introduced because sole regex matching is too CPU intensive. it incredibly speeds up the filtering when you enter some (or at least one) words that MUST be contained in the LogEntry to undergo the regex inspection-->
			<RegexBoosters>
				<Booster>6273</Booster>
				<Booster>CallingStationID</Booster>
			</RegexBoosters>
			<!-- This is the regex that tries to extract an IP from the entries that contain the booster words, for testing use regex101.com-->
			<Regex>
				&lt;Data Name=.CallingStationID.&gt;(\d*.\d*.\d*.\d*)
			</Regex>
		</Task>
		<Task Name="BlockRDWEBBruteAttacksPOST" Active="true">
			<Description>
				This rule checks for failed RDweb Gateway IIS login attempts (DEFAULT Settings)
			</Description>
			<LockTime>
				3600
			</LockTime>
			<OnlyNew>
				False
			</OnlyNew>
			<EventAge>
				3600
			</EventAge>
			<TriggerCount>
				5
			</TriggerCount>
			<PermaBanCount>
				2
			</PermaBanCount>
			<EventPath>
				Microsoft-IIS-Logging/Logs
			</EventPath>
			<RegexBoosters>
				<Booster>6200</Booster>
			</RegexBoosters>
			<Regex>
				&lt;Data Name=.c-ip.&gt;(\d*.\d*.\d*.\d*)&lt;\/Data&gt;.*&lt;Data Name=.cs-method.&gt;POST&lt;\/Data&gt;.*&lt;Data Name=.cs-uri-stem.&gt;\/RDWeb\/Pages\/.....\/login\.aspx&lt;\/Data&gt;.*&lt;Data Name=.sc-status.&gt;200&lt;\/Data&gt;.*&lt;Data Name=.sc-win32-status.&gt;0&lt;\/Data&gt;.*&lt;Data Name=.sc-substatus.&gt;0&lt;\/Data&gt;
			</Regex>
		</Task>
		<Task Name="BlockRDWEBBruteAttacksGET" Active="true">
			<Description>
				This rule checks for failed RDweb Gateway IIS login attempts (without providing domain name)
			</Description>
			<LockTime>
				3600
			</LockTime>
			<OnlyNew>
				False
			</OnlyNew>
			<EventAge>
				3600
			</EventAge>
			<TriggerCount>
				5
			</TriggerCount>
			<PermaBanCount>
				2
			</PermaBanCount>
			<EventPath>
				Microsoft-IIS-Logging/Logs
			</EventPath>
			<RegexBoosters>
				<Booster>6200</Booster>
			</RegexBoosters>
			<Regex>
				&lt;Data Name=.c-ip.&gt;(\d*.\d*.\d*.\d*)&lt;\/Data&gt;.*&lt;Data Name=.cs-method.&gt;GET&lt;\/Data&gt;.*&lt;Data Name=.cs-uri-stem.&gt;\/RDWeb\/Pages\/.....\/login\.aspx&lt;\/Data&gt;.*&lt;Data Name=.sc-status.&gt;200&lt;\/Data&gt;.*&lt;Data Name=.sc-win32-status.&gt;0&lt;\/Data&gt;.*&lt;Data Name=.sc-substatus.&gt;0&lt;\/Data&gt;
			</Regex>
		</Task>
	</Tasks>
</Config>
